variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  GIT_STRATEGY: FETCH

stages:
  - lints
  - build
  - test_create_infra
  - tests
  - test_destroy_infra
  - deploy

lint1:
  stage: lints
  script:
    - echo lint1

lint2:
  stage: lints
  script:
    - echo lint2

build:
  only:
    refs:
      - master
      - tags
  stage: build
  script:
    - echo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo docker build -t $IMAGE_TAG .
    - echo docker push $IMAGE_TAG

test_create_infra:
  stage: test_create_infra
  script:
    - if [ ! -f /tmp/gitlab-ci-key ]; then ssh-keygen -b 2048 -t rsa -f /tmp/gitlab-ci-key -C gitlab-ci@gitlab -q -N ""; fi
    - cd tests/terraform
    - terraform init
    - TF_VAR_domain_name=${DOMAIN_NAME} TF_VAR_project_id=${PROJECT_ID} TF_VAR_user_name=${USER_NAME} TF_VAR_user_password=${USER_PASSWORD} TF_VAR_region=${REGION} TF_VAR_az_zone=${AZ} TF_VAR_volume_type=${VOLUME_TYPE} TF_VAR_public_key=$(cat /tmp/gitlab-ci-key.pub) terraform apply -state=/home/gitlab-runner/terraform.tfstate -auto-approve

tests:
  stage: tests
  script:
    - cd tests/
    - export TEST_SERVER=$(terraform output -state=/home/gitlab-runner/terraform.tfstate  server_external_ip)
    - echo $TEST_SERVER
    - scp -i /tmp/gitlab-ci-key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" docker-compose.yaml root@$TEST_SERVER:~/
    - ssh -i /tmp/gitlab-ci-key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@$TEST_SERVER -T "docker-compose up -d"
    - sleep 5
    - ssh -i /tmp/gitlab-ci-key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@$TEST_SERVER -T "docker-compose exec guestbookapp pytest -v /app"

  testing_container:
    image: nortlite/guestbookapp:latest
    entrypoint: ["pytest", "-v", "/app"]
    environment:
      APP_ADDR: guestbookapp
    networks:
      - network_app
    depends_on:
      - guestbookapp

test_destroy_infra:
  stage: test_destroy_infra
  script:
    - cd tests/terraform
    - ls -la
    - terraform init
    - TF_VAR_domain_name=${DOMAIN_NAME} TF_VAR_project_id=${PROJECT_ID} TF_VAR_user_name=${USER_NAME} TF_VAR_user_password=${USER_PASSWORD} TF_VAR_region=${REGION} TF_VAR_az_zone=${AZ} TF_VAR_volume_type=${VOLUME_TYPE} TF_VAR_public_key=$(cat /tmp/gitlab-ci-key.pub) terraform destroy -state=/home/gitlab-runner/terraform.tfstate -auto-approve
    - ls -l
  when: always

deploy:
  stage: deploy
  script:
    - echo deploy
