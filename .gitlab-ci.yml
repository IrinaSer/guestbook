variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  GIT_STRATEGY: none

stages:
  - lints
  - build
  - test_create_infra
  - tests
  - test_destroy_infra
  - deploy

lint1:
  stage: lints
  script:
    - echo lint1

lint2:
  stage: lints
  script:
    - echo lint2

build:
  only:
    refs:
      - master
      - tags
  stage: build
  script:
    - echo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo docker build -t $IMAGE_TAG .
    - echo docker push $IMAGE_TAG

test_create_infra:
  stage: test_create_infra
  script:
    - rm -rf /tmp/gitlab-ci-key*
    - ssh-keygen -b 2048 -t rsa -f /tmp/gitlab-ci-key -C gitlab-ci@gitlab -q -N ""
    - mkdir -p tests/terraform
    - cd tests/terraform
    - wget https://gist.githubusercontent.com/f4rx/fdf40ebba6e0ee0ba1c3b39c597be27b/raw/50abfde3ed7f28e269906e45ee4c1d3933e0b4ca/main.tf
    - wget terraform_0.12.15_linux_amd64.zip
    - terraform init
    - TF_VAR_domain_name=${DOMAIN_NAME} TF_VAR_project_id=${PROJECT_ID} TF_VAR_user_name=${USER_NAME} TF_VAR_user_password=${USER_PASSRD} TF_VAR_region=${REGION} TF_VAR_az_zone=${AZ} TF_VAR_volume_type=${VOLUME_TYPE} TF_VAR_public_key=$(cat /tmp/gitlab-ci-key.pub) terraform apply -auto-approve

tests:
  stage: tests
  script:
    - cd tests/terraform
    - echo SSH and run tests

test_destroy_infra:
  stage: test_destroy_infra
  script:
    - cd tests/terraform
    - destroy
  when: always

deploy:
  stage: deploy
  script:
    - echo deploy
