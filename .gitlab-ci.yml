variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  GIT_STRATEGY: none

stages:
  - lints
  - test_create_infra
  - tests
  - test_destroy_infra
  - build
  - deploy

lint1:
  stage: lints
  script:
    - echo lint1

lint2:
  stage: lints
  script:
    - echo lint2

test_create_infra:
  stage: test_create_infra
  script:
    - ssh-keygen -b 2048 -t rsa -f /tmp/gitlab-ci-key -C gitlab-ci@gitlab -q -N ""
    - mkdir -p tests/terraform
    - cd tests/terraform
    -|
      cat > main.tf << EOF
      variable "domain_name" {}
variable "project_id" {}
variable "user_name" {}
variable "user_password" {}
variable "region" {}
variable "az_zone" {}
variable "volume_type" {}
variable "public_key" {}
variable "hdd_size" {
  default = "5"
}


provider "openstack" {
  domain_name = "${var.domain_name}"
  tenant_id   = "${var.project_id}"
  user_name   = "${var.user_name}"
  password    = "${var.user_password}"
  auth_url    = "https://api.selvpc.ru/identity/v3"
  region      = "${var.region}"
}

module "app-stand" {
  source = "git@github.com:f4rx/app-terraform.git/?ref=master"

  region                = "${var.region}"
  public_key            = "${var.public_key}"
  hdd_size              = "${var.hdd_size}"
  volume_type           = "${var.volume_type}"
  az_zone               = "${var.az_zone}"
  app_count             = "1"

  domain_name = "${var.domain_name}"
  project_id = "${var.project_id}"
  user_name = "${var.user_name}"
  user_password = "${var.user_password}"

}

output "server_external_ip" {
  value = "${module.app-stand.server_external_ip}"
}
EOF
    - terraform init
    - TF_VAR_domain_name=${DOMAIN_NAME} TF_VAR_project_id=${PROJECT_ID} TF_VAR_user_name=${USER_NAME} TF_VAR_user_password=${USER_PASSRD} TF_VAR_region=${REGION} TF_VAR_az_zone=${AZ} TF_VAR_volume_type=${VOLUME_TYPE} TF_VAR_public_key=$(cat /tmp/gitlab-ci-key.pub) terraform apply -auto-approve

tests:
  stage: tests
  script:
    - cd tests/terraform
    - echo SSH and run tests

test_destroy_infra:
  stage: test_destroy_infra
  script:
    - cd tests/terraform
    - destroy
  when: always

build:
  only:
    refs:
      - master
      - tags
  stage: build
  script:
    - echo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo docker build -t $IMAGE_TAG .
    - echo docker push $IMAGE_TAG

deploy:
  stage: deploy
  script:
    - echo deploy
